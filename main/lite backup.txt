// void control_pump() {
//     esp_rom_gpio_pad_select_gpio(PUMP);
//     gpio_set_direction(PUMP, GPIO_MODE_OUTPUT);
//     gpio_set_level(PUMP, 0);

//     if (adc_percentage < 40) {
//         // Soil is dry, turn on the pump
//         gpio_set_level(PUMP, 1);
//     } else if (adc_percentage > 60) {
//         // Soil is wet, turn off the pump
//         gpio_set_level(PUMP, 0);
//     }
// }

// void pump_task(void *pvParameters) {
//     esp_rom_gpio_pad_select_gpio(PUMP);
//     gpio_set_direction(PUMP, GPIO_MODE_OUTPUT);
//     gpio_set_level(PUMP, 0);

//     while (1) {
//         // if (xSemaphoreTake(adc_semaphore, portMAX_DELAY) == pdTRUE) {
//             if (adc_percentage < 40) {
//                 gpio_set_level(PUMP, 1);
//                 gpio_set_level(YL69_READ_ACTIVE, 1);

//                 // Add a delay to allow the sensor reading to stabilize
//                 vTaskDelay(500 / portTICK_PERIOD_MS);

//                 // Read and update adc_percentage
//                 uint16_t adc_5VReading = 1050;
//                 adc_reading = yl69_read();
//                 adc_reading = adc_reading - adc_5VReading;
//                 adc_percentage = yl69_normalization(adc_reading);

//                 // Turn off the pump if the soil moisture is too high
//                 if (adc_percentage >= 60) {
//                     gpio_set_level(PUMP, 0);
//                     gpio_set_level(YL69_READ_ACTIVE, 0);
//                 }
//             // }
//             // xSemaphoreGive(adc_semaphore);
//         }

//         // Delay between checks
//         vTaskDelay(1000 / portTICK_PERIOD_MS);
//     }
// }


// void setup(){
//     yl69_setup(ADC_CHANNEL_6);

// }

// NYA FUNGERANDE KOD
// static void yl69_task(void *arg) {
//     uint32_t reading_interval = 20000;
//     uint8_t pump_state = 0; // 0: Pump is off, 1: Pump is on

//     // Configure YL-69 power control pin as an output
//     esp_rom_gpio_pad_select_gpio(YL69_READ_ACTIVE);
//     gpio_set_direction(YL69_READ_ACTIVE, GPIO_MODE_OUTPUT);

//     // Turn off the YL-69 sensor initially
//     gpio_set_level(YL69_READ_ACTIVE, 0);

//     // Initialize the pump pin
//     esp_rom_gpio_pad_select_gpio(PUMP);
//     gpio_set_direction(PUMP, GPIO_MODE_OUTPUT);
//     gpio_set_level(PUMP, 0);

//     while(1) {
//         gpio_set_level(YL69_READ_ACTIVE, 1);

//         uint16_t adc_5VReading = 1050;
//         adc_reading = yl69_read();
//         adc_reading = adc_reading - adc_5VReading;
//         //ESP_LOGI(TAG, "Raw ADC Reading: %d", adc_reading); // Add this line for debugging
//         adc_percentage = yl69_normalization(adc_reading);

//         if (adc_percentage < 40) {
//             // Soil is dry, increase reading frequency to 1 second
//             reading_interval = 1000;

//             // Check if the pump is off, then turn it on
//             if (pump_state == 0) {
//                 gpio_set_level(PUMP, 1);
//                 pump_state = 1;
//             }
//         } else if (adc_percentage > 60) {
//             // Soil is wet, decrease reading frequency to 20 seconds
//             reading_interval = 20000;

//             // Check if the pump is on, then turn it off
//             if (pump_state == 1) {
//                 gpio_set_level(PUMP, 0);
//                 pump_state = 0;
//             }
//         }

//         vTaskDelay(500 / portTICK_PERIOD_MS);
//         gpio_set_level(YL69_READ_ACTIVE, 0);

//         vTaskDelay(reading_interval / portTICK_PERIOD_MS);
//     }
// }



// GAMMAL YL69
// static void yl69_task(void *arg) {
//     uint32_t reading_interval = 20000;
//     // Configure YL-69 power control pin as an output
//     esp_rom_gpio_pad_select_gpio(YL69_READ_ACTIVE);
//     gpio_set_direction(YL69_READ_ACTIVE, GPIO_MODE_OUTPUT);

//     // Turn off the YL-69 sensor initially
//     gpio_set_level(YL69_READ_ACTIVE, 0);

//     while(1) {

//         gpio_set_level(YL69_READ_ACTIVE, 1);

//         uint16_t adc_5VReading = 1050;
//         adc_reading = yl69_read();
//         adc_reading = adc_reading - adc_5VReading; 
//         //ESP_LOGI(TAG, "Raw ADC Reading: %d", adc_reading); // Add this line for debugging
//         adc_percentage = yl69_normalization(adc_reading);

//         vTaskDelay(500 / portTICK_PERIOD_MS);

//         if (adc_percentage < 40) {
//             // Soil is dry, increase reading frequency to 1 second

//             //ADD PUMP CONTROLL HERE OR USE ANOTHER TASK FOR THAT?

//             reading_interval = 1000;
//         } else if (adc_percentage > 60) {
//             // Soil is wet, decrease reading frequency to 20 seconds
//             reading_interval = 20000;
//         }
//         gpio_set_level(YL69_READ_ACTIVE, 0);

//         vTaskDelay(reading_interval / portTICK_PERIOD_MS);
//     }
    
//     //vTaskDelete(NULL); 
// }


// void dht22_task(void *pvParameters){

//     while(1){
//         dht_read_data(DHT_TYPE_AM2301, DHT_READ_DATA, &humidity, &temperature);

//         vTaskDelay(20000 / portTICK_PERIOD_MS);
//     }
// }